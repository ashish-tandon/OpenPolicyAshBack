version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: opencivicdata
      POSTGRES_USER: openpolicy
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-openpolicy123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openpolicy"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - openpolicy-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - openpolicy-network

  opa:
    image: openpolicyagent/opa:latest-debug
    ports:
      - "8181:8181"
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "/policies"
    volumes:
      - ./policies:/policies:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - openpolicy-network

  app:
    image: ashishtandon9/openpolicyashback:latest
    depends_on:
      - postgres
      - redis
      - opa
    environment:
      - DATABASE_URL=postgresql://openpolicy:${POSTGRES_PASSWORD:-openpolicy123}@postgres:5432/opencivicdata
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPA_URL=http://opa:8181
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    volumes:
      - ./policies:/app/policies:ro
      - ./data:/app/data
    networks:
      - openpolicy-network
    restart: unless-stopped

  celery-worker:
    image: ashishtandon9/openpolicyashback-celery:latest
    command: celery -A src.scheduler.celery_app worker --loglevel=info
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://openpolicy:${POSTGRES_PASSWORD:-openpolicy123}@postgres:5432/opencivicdata
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONPATH=/app
    networks:
      - openpolicy-network
    restart: unless-stopped

  celery-beat:
    image: ashishtandon9/openpolicyashback-celery:latest
    command: celery -A src.scheduler.celery_app beat --loglevel=info
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://openpolicy:${POSTGRES_PASSWORD:-openpolicy123}@postgres:5432/opencivicdata
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    networks:
      - openpolicy-network
    restart: unless-stopped

  policy-validator:
    image: ashishtandon9/openpolicyashback-policy-validator:latest
    depends_on:
      - opa
      - postgres
      - redis
    environment:
      - OPA_URL=http://opa:8181
      - DATABASE_URL=postgresql://openpolicy:${POSTGRES_PASSWORD:-openpolicy123}@postgres:5432/opencivicdata
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./policies:/policies:ro
    networks:
      - openpolicy-network
    restart: unless-stopped

  flower:
    image: mher/flower:2.0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
    networks:
      - openpolicy-network

volumes:
  postgres_data:
  redis_data:

networks:
  openpolicy-network:
    driver: bridge